{"version":3,"sources":["main.js","jquery-scrolltofixed.js"],"names":["randomNumberFromRange","min","max","randomNumber","Math","floor","random","$","addClass","isScrollToFixed","el","data","ScrollToFixed","options","resetScroll","target","trigger","setUnfixed","lastOffsetLeft","offsetTop","offset","top","offsetLeft","left","base","offsets","position","originalOffsetLeft","css","isReset","bottom","setFixed","getLimit","limit","apply","isFixed","isAbsolute","isUnfixed","dimensions","getBoundingClientRect","spacer","display","width","height","float","cssOptions","z-index","zIndex","getMarginTop","margin-left","dontSetWidth","baseClassName","className","setAbsolute","removeOffsets","originalZIndex","originalPosition","originalOffsetTop","removeClass","setLeft","x","marginTop","checkScroll","is","wasReset","wasUnfixed","window","scrollLeft","y","scrollTop","minWidth","postPosition","maxWidth","outerHeight","getBottom","this","$el","originalFloat","windowResize","windowScroll","requestAnimationFrame","preventDefault","e","event","returnValue","init","extend","defaultOptions","after","bind","preFixed","postFixed","preUnfixed","postUnfixed","preAbsolute","postAbsolute","fixed","unfixed","spacerClass","ev","unbind","remove","removeData","fn","scrollToFixed","each","jQuery","hr","Date","getHours","minNumber","maxNumber","click","toggleClass","document","body","mousedown","parents","andSelf","scroll","magnificPopup","type","midClick","fixedContentPos","removalDelay","mainClass","defaults","tClose","tLoading","ready","menuItems","map","item","attr","length","href","stop","animate","focus","validate","$contactForm","submit","valid","nome","val","ajax","url","method","serialize","dataType","beforeSend","success","append","keyup","removeAttr","error"],"mappings":"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","file":"main.js","sourcesContent":["/**\n * Define day and night plugin\n * Source help: http://stackoverflow.com/questions/2250036/how-to-determine-if-it-is-day-or-night-in-javascript-or-jquery\n */\n\nvar hr = (new Date()).getHours();\n\nif (hr > 18 || hr < 6) {\n    $('.header').addClass('header--night');\n}\n\n/**\n * Radom image I coder\n * Source help: http://stackoverflow.com/questions/22363616/generate-random-number-between-2-variables-jquery\n */\n\nvar minNumber = 1;\nvar maxNumber = 3;\n\nfunction randomNumberFromRange(min, max) {\n\n    var randomNumber = Math.floor(Math.random()*(max-min+1)+min);\n\n    if (randomNumber === 1) {\n        $('.i-coder').addClass('i-coder--coffee-in-the-hand');\n    } else if (randomNumber === 2) {\n        $('.i-coder').addClass('i-coder--normal');\n    } else if (randomNumber === 3) {\n        $('.i-coder').addClass('i-coder--drink-coffee');\n    }\n\n}\n\nrandomNumberFromRange(minNumber, maxNumber);\n\n// Hidden toggle menu when click outside\n\n$(\".menu-toggle\").click(function () {\n    $(\".nav__options\").toggleClass(\"nav__options--active\");\n    $(document.body).mousedown(function(event) {\n        var target = $(event.target);\n        if (!target.parents().andSelf().is('.nav')){\n            $(\".nav__options\").removeClass(\"nav__options--active\");\n        }\n    });\n    return false;\n});\n\n// Hidden menu when scroll\n\n$( window ).scroll(function() {\n    $(\".nav__options\").removeClass(\"nav__options--active\");\n});\n\n// Magnific popup\n\n$('.open-trabalhos').magnificPopup({\n    type: 'inline',\n    midClick: true,\n    fixedContentPos: true,\n    removalDelay: 300,\n    mainClass: 'modulos-popup fade-popup'\n});\n$.extend(true, $.magnificPopup.defaults, {\n  tClose: 'Fechar (Esc)',\n  tLoading: 'Carregando...'\n});\n\n// Navigation scroll\n\n$(document).ready(function() {\n    $('.nav').scrollToFixed();\n\n    var menuItems = $(\".nav__options a\");\n    menuItems.map(function(){\n        var item = $($(this).attr(\"href\"));\n        if (item.length) { return item; }\n    });\n\n    // Bind click handler to menu items\n    // so we can get a fancy scroll animation\n    menuItems.click(function(e){\n        var href = $(this).attr(\"href\"),\n        offsetTop = href === \"#\" ? 0 : $(href).offset().top-15;\n        $('html, body').stop().animate({\n            scrollTop: offsetTop\n        },\n        400, function () {});\n        e.preventDefault();\n    });\n\n\n    // Move arm when focus in input\n    $(\"#email\").focus(function() {\n        $('.i-arm').addClass('i-arm-email-focus');\n        $('.i-arm').removeClass('i-arm-mensagem-focus');\n    });\n\n    $(\"#mensagem\").focus(function() {\n        $('.i-arm').addClass('i-arm-mensagem-focus');\n        $('.i-arm').removeClass('i-arm-email-focus');\n    });\n\n    $(\"#nome\").focus(function() {\n        $('.i-arm').removeClass('i-arm-email-focus');\n        $('.i-arm').removeClass('i-arm-mensagem-focus');\n    });\n\n    (function() {\n        if($.fn.validate) {\n            var $contactForm = $(\".form\");\n            // VALIDATE FORM\n            $contactForm.validate();\n            $contactForm.submit(function(e) {\n                if ($(this).valid()) {\n                    var nome = $(\"input#nome\").val();\n                    $(\".subject\").val(nome + \" - Contato via site\");\n                    e.preventDefault();\n                    $.ajax({\n                        url: '//formspree.io/boniatti.rodrigo@gmail.com',\n                        method: 'POST',\n                        data: $(this).serialize(),\n                        dataType: 'json',\n                        beforeSend: function() {\n                            $(\".btn-submit\").val('Enviando...');\n                        },\n                        success: function() {\n                            $(\".btn-submit\").val('Enviado');\n                            $(\".btn-submit\").addClass(\"btn-submit--success\");\n                            $(\".i-mouth\").addClass(\"i-happy-smile\");\n                            $contactForm.append('<span class=\"form-message\">Mensagem enviada com sucesso.</span>');\n                            $('input[type=\"submit\"]').attr('disabled','disabled');\n                            $('input[type=\"text\"]').keyup(function() {\n                                if($(this).val() !== '') {\n                                    $('input[type=\"submit\"]').removeAttr('disabled');\n                                }\n                            });\n                        },\n                        error: function() {\n                            $(\".btn-submit\").removeClass(\"btn-submit--success\");\n                            $(\".btn-submit\").addClass(\"btn-submit--error\");\n                            $(\".i-mouth\").addClass(\"i-open-mouth\");\n                            $(\".btn-submit\").val('Ops, ocorreu um erro.');\n                            $contactForm.append('<span class=\"form-message\">Ocorreu um erro ao enviar sua mensagem. Utilize meu email abaixo.</span>');\n                            $('input[type=\"submit\"]').attr('disabled','disabled');\n                            $('input[type=\"text\"]').keyup(function() {\n                                if($(this).val() !== '') {\n                                    $('input[type=\"submit\"]').removeAttr('disabled');\n                                }\n                             });\n                        }\n                    });\n                }\n               return false;\n            });\n        }\n    })();\n\n});","/*\n * ScrollToFixed\n * https://github.com/bigspotteddog/ScrollToFixed\n *\n * Copyright (c) 2011 Joseph Cava-Lynch\n * MIT license\n */\n(function($) {\n    $.isScrollToFixed = function(el) {\n        return !!$(el).data('ScrollToFixed');\n    };\n\n    $.ScrollToFixed = function(el, options) {\n        // To avoid scope issues, use 'base' instead of 'this' to reference this\n        // class from internal events and functions.\n        var base = this;\n\n        // Access to jQuery and DOM versions of element.\n        base.$el = $(el);\n        base.el = el;\n\n        // Add a reverse reference to the DOM object.\n        base.$el.data('ScrollToFixed', base);\n\n        // A flag so we know if the scroll has been reset.\n        var isReset = false;\n\n        // The element that was given to us to fix if scrolled above the top of\n        // the page.\n        var target = base.$el;\n\n        var position;\n        var originalPosition;\n        var originalFloat;\n        var originalOffsetTop;\n        var originalZIndex;\n\n        // The offset top of the element when resetScroll was called. This is\n        // used to determine if we have scrolled past the top of the element.\n        var offsetTop = 0;\n\n        // The offset left of the element when resetScroll was called. This is\n        // used to move the element left or right relative to the horizontal\n        // scroll.\n        var offsetLeft = 0;\n        var originalOffsetLeft = -1;\n\n        // This last offset used to move the element horizontally. This is used\n        // to determine if we need to move the element because we would not want\n        // to do that for no reason.\n        var lastOffsetLeft = -1;\n\n        // This is the element used to fill the void left by the target element\n        // when it goes fixed; otherwise, everything below it moves up the page.\n        var spacer = null;\n\n        // Capture the original offsets for the target element. This needs to be\n        // called whenever the page size changes or when the page is first\n        // scrolled. For some reason, calling this before the page is first\n        // scrolled causes the element to become fixed too late.\n        function resetScroll() {\n            // Set the element to it original positioning.\n            target.trigger('preUnfixed.ScrollToFixed');\n            setUnfixed();\n            target.trigger('unfixed.ScrollToFixed');\n\n            // Reset the last offset used to determine if the page has moved\n            // horizontally.\n            lastOffsetLeft = -1;\n\n            // Capture the offset top of the target element.\n            offsetTop = target.offset().top;\n\n            // Capture the offset left of the target element.\n            offsetLeft = target.offset().left;\n\n            // If the offsets option is on, alter the left offset.\n            if (base.options.offsets) {\n                offsetLeft += (target.offset().left - target.position().left);\n            }\n\n            if (originalOffsetLeft === -1) {\n                originalOffsetLeft = offsetLeft;\n            }\n\n            position = target.css('position');\n\n            // Set that this has been called at least once.\n            isReset = true;\n\n            if (base.options.bottom !== -1) {\n                target.trigger('preFixed.ScrollToFixed');\n                setFixed();\n                target.trigger('fixed.ScrollToFixed');\n            }\n        }\n\n        function getLimit() {\n            var limit = base.options.limit;\n            if (!limit) {\n                return 0;\n            }\n\n            if (typeof(limit) === 'function') {\n                return limit.apply(target);\n            }\n            return limit;\n        }\n\n        // Returns whether the target element is fixed or not.\n        function isFixed() {\n            return position === 'fixed';\n        }\n\n        // Returns whether the target element is absolute or not.\n        function isAbsolute() {\n            return position === 'absolute';\n        }\n\n        function isUnfixed() {\n            return !(isFixed() || isAbsolute());\n        }\n\n        // Sets the target element to fixed. Also, sets the spacer to fill the\n        // void left by the target element.\n        function setFixed() {\n            // Only fix the target element and the spacer if we need to.\n            if (!isFixed()) {\n                //get REAL dimensions (decimal fix)\n                //Ref. http://stackoverflow.com/questions/3603065/how-to-make-jquery-to-not-round-value-returned-by-width\n                var dimensions = target[0].getBoundingClientRect();\n\n                // Set the spacer to fill the height and width of the target\n                // element, then display it.\n                spacer.css({\n                    'display' : target.css('display'),\n                    'width' : dimensions.width,\n                    'height' : dimensions.height,\n                    'float' : target.css('float')\n                });\n\n                // Set the target element to fixed and set its width so it does\n                // not fill the rest of the page horizontally. Also, set its top\n                // to the margin top specified in the options.\n\n                cssOptions = {\n                    'z-index' : base.options.zIndex,\n                    'position' : 'fixed',\n                    'top' : base.options.bottom === -1?getMarginTop():'',\n                    'bottom' : base.options.bottom === -1?'':base.options.bottom,\n                    'margin-left' : '0px'\n                };\n\n                if (!base.options.dontSetWidth) {\n                    cssOptions['width']=target.css('width');\n                }\n\n                target.css(cssOptions);\n\n                target.addClass(base.options.baseClassName);\n\n                if (base.options.className) {\n                    target.addClass(base.options.className);\n                }\n\n                position = 'fixed';\n            }\n        }\n\n        function setAbsolute() {\n\n            var top = getLimit();\n            var left = offsetLeft;\n\n            if (base.options.removeOffsets) {\n                left = '';\n                top = top - offsetTop;\n            }\n\n            cssOptions={\n              'position' : 'absolute',\n              'top' : top,\n              'left' : left,\n              'margin-left' : '0px',\n              'bottom' : ''\n            };\n\n            if (!base.options.dontSetWidth) {\n                cssOptions['width'] = target.css('width');\n            }\n\n            target.css(cssOptions);\n\n            position = 'absolute';\n        }\n\n        // Sets the target element back to unfixed. Also, hides the spacer.\n        function setUnfixed() {\n            // Only unfix the target element and the spacer if we need to.\n            if (!isUnfixed()) {\n                lastOffsetLeft = -1;\n\n                // Hide the spacer now that the target element will fill the\n                // space.\n                spacer.css('display', 'none');\n\n                // Remove the style attributes that were added to the target.\n                // This will reverse the target back to the its original style.\n                target.css({\n                    'z-index' : originalZIndex,\n                    'width' : '',\n                    'position' : originalPosition,\n                    'left' : '',\n                    'top' : originalOffsetTop,\n                    'margin-left' : ''\n                });\n\n                target.removeClass('scroll-to-fixed-fixed');\n\n                if (base.options.className) {\n                    target.removeClass(base.options.className);\n                }\n\n                position = null;\n            }\n        }\n\n        // Moves the target element left or right relative to the horizontal\n        // scroll position.\n        function setLeft(x) {\n            // Only if the scroll is not what it was last time we did this.\n            if (x !== lastOffsetLeft) {\n                // Move the target element horizontally relative to its original\n                // horizontal position.\n                target.css('left', offsetLeft - x);\n\n                // Hold the last horizontal position set.\n                lastOffsetLeft = x;\n            }\n        }\n\n        function getMarginTop() {\n            var marginTop = base.options.marginTop;\n            if (!marginTop) {\n                return 0;\n            }\n\n            if (typeof(marginTop) === 'function') {\n                return marginTop.apply(target);\n            }\n            return marginTop;\n        }\n\n        // Checks to see if we need to do something based on new scroll position\n        // of the page.\n        function checkScroll() {\n            if (!$.isScrollToFixed(target) || target.is(':hidden')) {\n                return;\n            }\n\n            var wasReset = isReset;\n            var wasUnfixed = isUnfixed();\n\n            // If resetScroll has not yet been called, call it. This only\n            // happens once.\n            if (!isReset) {\n                resetScroll();\n            } else if (isUnfixed()) {\n                // if the offset has changed since the last scroll,\n                // we need to get it again.\n\n                // Capture the offset top of the target element.\n                offsetTop = target.offset().top;\n\n                // Capture the offset left of the target element.\n                offsetLeft = target.offset().left;\n            }\n\n            // Grab the current horizontal scroll position.\n            var x = $(window).scrollLeft();\n\n            // Grab the current vertical scroll position.\n            var y = $(window).scrollTop();\n\n            // Get the limit, if there is one.\n            var limit = getLimit();\n\n            // If the vertical scroll position, plus the optional margin, would\n            // put the target element at the specified limit, set the target\n            // element to absolute.\n            if (base.options.minWidth && $(window).width() < base.options.minWidth) {\n                if (!isUnfixed() || !wasReset) {\n                    postPosition();\n                    target.trigger('preUnfixed.ScrollToFixed');\n                    setUnfixed();\n                    target.trigger('unfixed.ScrollToFixed');\n                }\n            } else if (base.options.maxWidth && $(window).width() > base.options.maxWidth) {\n                if (!isUnfixed() || !wasReset) {\n                    postPosition();\n                    target.trigger('preUnfixed.ScrollToFixed');\n                    setUnfixed();\n                    target.trigger('unfixed.ScrollToFixed');\n                }\n            } else if (base.options.bottom === -1) {\n                // If the vertical scroll position, plus the optional margin, would\n                // put the target element at the specified limit, set the target\n                // element to absolute.\n                if (limit > 0 && y >= limit - getMarginTop()) {\n                    if (!wasUnfixed && (!isAbsolute() || !wasReset)) {\n                        postPosition();\n                        target.trigger('preAbsolute.ScrollToFixed');\n                        setAbsolute();\n                        target.trigger('unfixed.ScrollToFixed');\n                    }\n                // If the vertical scroll position, plus the optional margin, would\n                // put the target element above the top of the page, set the target\n                // element to fixed.\n                } else if (y >= offsetTop - getMarginTop()) {\n                    if (!isFixed() || !wasReset) {\n                        postPosition();\n                        target.trigger('preFixed.ScrollToFixed');\n\n                        // Set the target element to fixed.\n                        setFixed();\n\n                        // Reset the last offset left because we just went fixed.\n                        lastOffsetLeft = -1;\n\n                        target.trigger('fixed.ScrollToFixed');\n                    }\n                    // If the page has been scrolled horizontally as well, move the\n                    // target element accordingly.\n                    setLeft(x);\n                } else {\n                    // Set the target element to unfixed, placing it where it was\n                    // before.\n                    if (!isUnfixed() || !wasReset) {\n                        postPosition();\n                        target.trigger('preUnfixed.ScrollToFixed');\n                        setUnfixed();\n                        target.trigger('unfixed.ScrollToFixed');\n                    }\n                }\n            } else {\n                if (limit > 0) {\n                    if (y + $(window).height() - target.outerHeight(true) >= limit - (getMarginTop() || -getBottom())) {\n                        if (isFixed()) {\n                            postPosition();\n                            target.trigger('preUnfixed.ScrollToFixed');\n\n                            if (originalPosition === 'absolute') {\n                                setAbsolute();\n                            } else {\n                                setUnfixed();\n                            }\n\n                            target.trigger('unfixed.ScrollToFixed');\n                        }\n                    } else {\n                        if (!isFixed()) {\n                            postPosition();\n                            target.trigger('preFixed.ScrollToFixed');\n                            setFixed();\n                        }\n                        setLeft(x);\n                        target.trigger('fixed.ScrollToFixed');\n                    }\n                } else {\n                    setLeft(x);\n                }\n            }\n        }\n\n        function getBottom() {\n            if (!base.options.bottom) {\n                return 0;\n            }\n            return base.options.bottom;\n        }\n\n        function postPosition() {\n            var position = target.css('position');\n\n            if (position === 'absolute') {\n                target.trigger('postAbsolute.ScrollToFixed');\n            } else if (position === 'fixed') {\n                target.trigger('postFixed.ScrollToFixed');\n            } else {\n                target.trigger('postUnfixed.ScrollToFixed');\n            }\n        }\n\n        var windowResize = function() {\n            // Check if the element is visible before updating it's position, which\n            // improves behavior with responsive designs where this element is hidden.\n            if(target.is(':visible')) {\n                isReset = false;\n                checkScroll();\n            } else {\n              // Ensure the spacer is hidden\n              setUnfixed();\n            }\n        };\n\n        var windowScroll = function() {\n            (!!window.requestAnimationFrame) ? requestAnimationFrame(checkScroll) : checkScroll();\n        };\n\n        var preventDefault = function(e) {\n            e = e || window.event;\n            if (e.preventDefault) {\n                e.preventDefault();\n            }\n            e.returnValue = false;\n        };\n\n        // Initializes this plugin. Captures the options passed in, turns this\n        // off for devices that do not support fixed position, adds the spacer,\n        // and binds to the window scroll and resize events.\n        base.init = function() {\n            // Capture the options for this plugin.\n            base.options = $.extend({}, $.ScrollToFixed.defaultOptions, options);\n\n            originalZIndex = target.css('z-index');\n\n            // Turn off this functionality for devices that do not support it.\n            // if (!(base.options && base.options.dontCheckForPositionFixedSupport)) {\n            //     var fixedSupported = isPositionFixedSupported();\n            //     if (!fixedSupported) return;\n            // }\n\n            // Put the target element on top of everything that could be below\n            // it. This reduces flicker when the target element is transitioning\n            // to fixed.\n            base.$el.css('z-index', base.options.zIndex);\n\n            // Create a spacer element to fill the void left by the target\n            // element when it goes fixed.\n            spacer = $('<div />');\n\n            position = target.css('position');\n            originalPosition = target.css('position');\n            originalFloat = target.css('float');\n            originalOffsetTop = target.css('top');\n\n            // Place the spacer right after the target element.\n            if (isUnfixed()) {\n                base.$el.after(spacer);\n            }\n\n            // Reset the target element offsets when the window is resized, then\n            // check to see if we need to fix or unfix the target element.\n            $(window).bind('resize.ScrollToFixed', windowResize);\n\n            // When the window scrolls, check to see if we need to fix or unfix\n            // the target element.\n            $(window).bind('scroll.ScrollToFixed', windowScroll);\n\n            // For touch devices, call checkScroll directlly rather than\n            // rAF wrapped windowScroll to animate the element\n            if ('ontouchmove' in window) {\n              $(window).bind('touchmove.ScrollToFixed', checkScroll);\n            }\n\n            if (base.options.preFixed) {\n                target.bind('preFixed.ScrollToFixed', base.options.preFixed);\n            }\n            if (base.options.postFixed) {\n                target.bind('postFixed.ScrollToFixed', base.options.postFixed);\n            }\n            if (base.options.preUnfixed) {\n                target.bind('preUnfixed.ScrollToFixed', base.options.preUnfixed);\n            }\n            if (base.options.postUnfixed) {\n                target.bind('postUnfixed.ScrollToFixed', base.options.postUnfixed);\n            }\n            if (base.options.preAbsolute) {\n                target.bind('preAbsolute.ScrollToFixed', base.options.preAbsolute);\n            }\n            if (base.options.postAbsolute) {\n                target.bind('postAbsolute.ScrollToFixed', base.options.postAbsolute);\n            }\n            if (base.options.fixed) {\n                target.bind('fixed.ScrollToFixed', base.options.fixed);\n            }\n            if (base.options.unfixed) {\n                target.bind('unfixed.ScrollToFixed', base.options.unfixed);\n            }\n\n            if (base.options.spacerClass) {\n                spacer.addClass(base.options.spacerClass);\n            }\n\n            target.bind('resize.ScrollToFixed', function() {\n                spacer.height(target.height());\n            });\n\n            target.bind('scroll.ScrollToFixed', function() {\n                target.trigger('preUnfixed.ScrollToFixed');\n                setUnfixed();\n                target.trigger('unfixed.ScrollToFixed');\n                checkScroll();\n            });\n\n            target.bind('detach.ScrollToFixed', function(ev) {\n                preventDefault(ev);\n\n                target.trigger('preUnfixed.ScrollToFixed');\n                setUnfixed();\n                target.trigger('unfixed.ScrollToFixed');\n\n                $(window).unbind('resize.ScrollToFixed', windowResize);\n                $(window).unbind('scroll.ScrollToFixed', windowScroll);\n\n                target.unbind('.ScrollToFixed');\n\n                //remove spacer from dom\n                spacer.remove();\n\n                base.$el.removeData('ScrollToFixed');\n            });\n\n            // Reset everything.\n            windowResize();\n        };\n\n        // Initialize the plugin.\n        base.init();\n    };\n\n    // Sets the option defaults.\n    $.ScrollToFixed.defaultOptions = {\n        marginTop : 0,\n        limit : 0,\n        bottom : -1,\n        zIndex : 1000,\n        baseClassName: 'scroll-to-fixed-fixed'\n    };\n\n    // Returns enhanced elements that will fix to the top of the page when the\n    // page is scrolled.\n    $.fn.scrollToFixed = function(options) {\n        return this.each(function() {\n            (new $.ScrollToFixed(this, options));\n        });\n    };\n})(jQuery);"],"sourceRoot":"/source/"}